{
  "contractName": "Dex",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderBook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "buyOrder",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tokenMapping",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "getOrderBook",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "buyOrder",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "ticker",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dex.Order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getOrderBook\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"buyOrder\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Dex.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"buyOrder\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenMapping\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/dex.sol\":\"Dex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/dex.sol\":{\"keccak256\":\"0x6d94a4536c54b59609e3f74104877d6d44d95914cd388816e3a7bca56fae6a94\",\"urls\":[\"bzz-raw://ee7ea9f52f97b4c22980acc96a5a32cc58799dcc0e31280513e69761cb911eb4\",\"dweb:/ipfs/QmccZHGPE277Yfc61YHJisFYCnX96ij74xAnCymfE4Vwhw\"]},\"/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/wallet.sol\":{\"keccak256\":\"0x7f3d3dcbe102258e6eebce1b42a60c9f988ea014a6dc22da1a1b3546b9e21630\",\"urls\":[\"bzz-raw://ddbd53620dd5108385501e1aa9010f9fa931c84ac11c2cbe8c1aefd2ae91f3a2\",\"dweb:/ipfs/QmeDsEbWNuy6osD7RAe2WyTb1ubNPtDw4jWBVcn1AEZaMp\"]},\"/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6116be806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639776aacf116100715780639776aacf1461016c5780639ead722214610188578063a8d2021a146101b8578063ba58ea68146101d4578063c9630cb014610204578063f2fde38b14610220576100a9565b80630bb431b6146100ae5780631f14df69146100e3578063667cb4ba14610113578063715018a6146101445780638da5cb5b1461014e575b600080fd5b6100c860048036038101906100c39190610fa7565b61023c565b6040516100da96959493929190611466565b60405180910390f35b6100fd60048036038101906100f89190610ea1565b6102cf565b60405161010a919061144b565b60405180910390f35b61012d60048036038101906101289190610f06565b6102f4565b60405161013b9291906113a2565b60405180910390f35b61014c610338565b005b610156610472565b60405161016391906112ea565b60405180910390f35b61018660048036038101906101819190610f2f565b61049b565b005b6101a2600480360381019061019d9190610ff6565b6105d6565b6040516101af9190611387565b60405180910390f35b6101d260048036038101906101cd919061101f565b6105fa565b005b6101ee60048036038101906101e99190610f6b565b6108b4565b6040516101fb9190611365565b60405180910390f35b61021e6004803603810190610219919061101f565b610a09565b005b61023a60048036038101906102359190610e78565b610c32565b005b6004602052826000526040600020602052816000526040600020818154811061026457600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610340610ddb565b73ffffffffffffffffffffffffffffffffffffffff1661035e610472565b73ffffffffffffffffffffffffffffffffffffffff16146103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab9061142b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104a3610ddb565b73ffffffffffffffffffffffffffffffffffffffff166104c1610472565b73ffffffffffffffffffffffffffffffffffffffff1614610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e9061142b565b60405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600281815481106105e657600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106989061140b565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b906113eb565b60405180910390fd5b61079783600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610de390919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161085c92919061133c565b602060405180830381600087803b15801561087657600080fd5b505af115801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190610edd565b50505050565b6060600460008481526020019081526020016000206000836001811115610904577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109fd57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16151515158152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610932565b50505050905092915050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa79061140b565b60405180910390fd5b610b1383600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610df990919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610bda93929190611305565b602060405180830381600087803b158015610bf457600080fd5b505af1158015610c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c9190610edd565b50505050565b610c3a610ddb565b73ffffffffffffffffffffffffffffffffffffffff16610c58610472565b73ffffffffffffffffffffffffffffffffffffffff1614610cae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca59061142b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d15906113cb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008183610df19190611567565b905092915050565b60008183610e079190611511565b905092915050565b600081359050610e1e8161161c565b92915050565b600081519050610e3381611633565b92915050565b600081359050610e488161164a565b92915050565b600081359050610e5d81611661565b92915050565b600081359050610e7281611671565b92915050565b600060208284031215610e8a57600080fd5b6000610e9884828501610e0f565b91505092915050565b60008060408385031215610eb457600080fd5b6000610ec285828601610e0f565b9250506020610ed385828601610e39565b9150509250929050565b600060208284031215610eef57600080fd5b6000610efd84828501610e24565b91505092915050565b600060208284031215610f1857600080fd5b6000610f2684828501610e39565b91505092915050565b60008060408385031215610f4257600080fd5b6000610f5085828601610e39565b9250506020610f6185828601610e0f565b9150509250929050565b60008060408385031215610f7e57600080fd5b6000610f8c85828601610e39565b9250506020610f9d85828601610e4e565b9150509250929050565b600080600060608486031215610fbc57600080fd5b6000610fca86828701610e39565b9350506020610fdb86828701610e63565b9250506040610fec86828701610e63565b9150509250925092565b60006020828403121561100857600080fd5b600061101684828501610e63565b91505092915050565b6000806040838503121561103257600080fd5b600061104085828601610e63565b925050602061105185828601610e39565b9150509250929050565b60006110678383611251565b60c08301905092915050565b61107c8161159b565b82525050565b61108b8161159b565b82525050565b600061109c826114d7565b6110a681856114ef565b93506110b1836114c7565b8060005b838110156110e25781516110c9888261105b565b97506110d4836114e2565b9250506001810190506110b5565b5085935050505092915050565b6110f8816115ad565b82525050565b611107816115ad565b82525050565b611116816115b9565b82525050565b611125816115b9565b82525050565b6000611138602683611500565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061119e601783611500565b91507f42616c616e636573206e6f742073756666696369656e740000000000000000006000830152602082019050919050565b60006111de601483611500565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b600061121e602083611500565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60c08201600082015161126760008501826112cc565b50602082015161127a6020850182611073565b50604082015161128d60408501826110ef565b5060608201516112a0606085018261110d565b5060808201516112b360808501826112cc565b5060a08201516112c660a08501826112cc565b50505050565b6112d5816115e3565b82525050565b6112e4816115e3565b82525050565b60006020820190506112ff6000830184611082565b92915050565b600060608201905061131a6000830186611082565b6113276020830185611082565b61133460408301846112db565b949350505050565b60006040820190506113516000830185611082565b61135e60208301846112db565b9392505050565b6000602082019050818103600083015261137f8184611091565b905092915050565b600060208201905061139c600083018461111c565b92915050565b60006040820190506113b7600083018561111c565b6113c46020830184611082565b9392505050565b600060208201905081810360008301526113e48161112b565b9050919050565b6000602082019050818103600083015261140481611191565b9050919050565b60006020820190508181036000830152611424816111d1565b9050919050565b6000602082019050818103600083015261144481611211565b9050919050565b600060208201905061146060008301846112db565b92915050565b600060c08201905061147b60008301896112db565b6114886020830188611082565b61149560408301876110fe565b6114a2606083018661111c565b6114af60808301856112db565b6114bc60a08301846112db565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061151c826115e3565b9150611527836115e3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561155c5761155b6115ed565b5b828201905092915050565b6000611572826115e3565b915061157d836115e3565b9250828210156115905761158f6115ed565b5b828203905092915050565b60006115a6826115c3565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6116258161159b565b811461163057600080fd5b50565b61163c816115ad565b811461164757600080fd5b50565b611653816115b9565b811461165e57600080fd5b50565b6002811061166e57600080fd5b50565b61167a816115e3565b811461168557600080fd5b5056fea264697066735822122098e5ad9ab149a08044c343e5e158467c348224d905ae721483247f6f49d4eca364736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80639776aacf116100715780639776aacf1461016c5780639ead722214610188578063a8d2021a146101b8578063ba58ea68146101d4578063c9630cb014610204578063f2fde38b14610220576100a9565b80630bb431b6146100ae5780631f14df69146100e3578063667cb4ba14610113578063715018a6146101445780638da5cb5b1461014e575b600080fd5b6100c860048036038101906100c39190610fa7565b61023c565b6040516100da96959493929190611466565b60405180910390f35b6100fd60048036038101906100f89190610ea1565b6102cf565b60405161010a919061144b565b60405180910390f35b61012d60048036038101906101289190610f06565b6102f4565b60405161013b9291906113a2565b60405180910390f35b61014c610338565b005b610156610472565b60405161016391906112ea565b60405180910390f35b61018660048036038101906101819190610f2f565b61049b565b005b6101a2600480360381019061019d9190610ff6565b6105d6565b6040516101af9190611387565b60405180910390f35b6101d260048036038101906101cd919061101f565b6105fa565b005b6101ee60048036038101906101e99190610f6b565b6108b4565b6040516101fb9190611365565b60405180910390f35b61021e6004803603810190610219919061101f565b610a09565b005b61023a60048036038101906102359190610e78565b610c32565b005b6004602052826000526040600020602052816000526040600020818154811061026457600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610340610ddb565b73ffffffffffffffffffffffffffffffffffffffff1661035e610472565b73ffffffffffffffffffffffffffffffffffffffff16146103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab9061142b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104a3610ddb565b73ffffffffffffffffffffffffffffffffffffffff166104c1610472565b73ffffffffffffffffffffffffffffffffffffffff1614610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e9061142b565b60405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600281815481106105e657600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106989061140b565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b906113eb565b60405180910390fd5b61079783600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610de390919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161085c92919061133c565b602060405180830381600087803b15801561087657600080fd5b505af115801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190610edd565b50505050565b6060600460008481526020019081526020016000206000836001811115610904577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109fd57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16151515158152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610932565b50505050905092915050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa79061140b565b60405180910390fd5b610b1383600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610df990919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610bda93929190611305565b602060405180830381600087803b158015610bf457600080fd5b505af1158015610c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c9190610edd565b50505050565b610c3a610ddb565b73ffffffffffffffffffffffffffffffffffffffff16610c58610472565b73ffffffffffffffffffffffffffffffffffffffff1614610cae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca59061142b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d15906113cb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008183610df19190611567565b905092915050565b60008183610e079190611511565b905092915050565b600081359050610e1e8161161c565b92915050565b600081519050610e3381611633565b92915050565b600081359050610e488161164a565b92915050565b600081359050610e5d81611661565b92915050565b600081359050610e7281611671565b92915050565b600060208284031215610e8a57600080fd5b6000610e9884828501610e0f565b91505092915050565b60008060408385031215610eb457600080fd5b6000610ec285828601610e0f565b9250506020610ed385828601610e39565b9150509250929050565b600060208284031215610eef57600080fd5b6000610efd84828501610e24565b91505092915050565b600060208284031215610f1857600080fd5b6000610f2684828501610e39565b91505092915050565b60008060408385031215610f4257600080fd5b6000610f5085828601610e39565b9250506020610f6185828601610e0f565b9150509250929050565b60008060408385031215610f7e57600080fd5b6000610f8c85828601610e39565b9250506020610f9d85828601610e4e565b9150509250929050565b600080600060608486031215610fbc57600080fd5b6000610fca86828701610e39565b9350506020610fdb86828701610e63565b9250506040610fec86828701610e63565b9150509250925092565b60006020828403121561100857600080fd5b600061101684828501610e63565b91505092915050565b6000806040838503121561103257600080fd5b600061104085828601610e63565b925050602061105185828601610e39565b9150509250929050565b60006110678383611251565b60c08301905092915050565b61107c8161159b565b82525050565b61108b8161159b565b82525050565b600061109c826114d7565b6110a681856114ef565b93506110b1836114c7565b8060005b838110156110e25781516110c9888261105b565b97506110d4836114e2565b9250506001810190506110b5565b5085935050505092915050565b6110f8816115ad565b82525050565b611107816115ad565b82525050565b611116816115b9565b82525050565b611125816115b9565b82525050565b6000611138602683611500565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061119e601783611500565b91507f42616c616e636573206e6f742073756666696369656e740000000000000000006000830152602082019050919050565b60006111de601483611500565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b600061121e602083611500565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60c08201600082015161126760008501826112cc565b50602082015161127a6020850182611073565b50604082015161128d60408501826110ef565b5060608201516112a0606085018261110d565b5060808201516112b360808501826112cc565b5060a08201516112c660a08501826112cc565b50505050565b6112d5816115e3565b82525050565b6112e4816115e3565b82525050565b60006020820190506112ff6000830184611082565b92915050565b600060608201905061131a6000830186611082565b6113276020830185611082565b61133460408301846112db565b949350505050565b60006040820190506113516000830185611082565b61135e60208301846112db565b9392505050565b6000602082019050818103600083015261137f8184611091565b905092915050565b600060208201905061139c600083018461111c565b92915050565b60006040820190506113b7600083018561111c565b6113c46020830184611082565b9392505050565b600060208201905081810360008301526113e48161112b565b9050919050565b6000602082019050818103600083015261140481611191565b9050919050565b60006020820190508181036000830152611424816111d1565b9050919050565b6000602082019050818103600083015261144481611211565b9050919050565b600060208201905061146060008301846112db565b92915050565b600060c08201905061147b60008301896112db565b6114886020830188611082565b61149560408301876110fe565b6114a2606083018661111c565b6114af60808301856112db565b6114bc60a08301846112db565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061151c826115e3565b9150611527836115e3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561155c5761155b6115ed565b5b828201905092915050565b6000611572826115e3565b915061157d836115e3565b9250828210156115905761158f6115ed565b5b828203905092915050565b60006115a6826115c3565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6116258161159b565b811461163057600080fd5b50565b61163c816115ad565b811461164757600080fd5b50565b611653816115b9565b811461165e57600080fd5b50565b6002811061166e57600080fd5b50565b61167a816115e3565b811461168557600080fd5b5056fea264697066735822122098e5ad9ab149a08044c343e5e158467c348224d905ae721483247f6f49d4eca364736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "93:592:3:-:0;;;;;;;;;;;;;867:17:5;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;93:592:3;;586:96:8;639:7;665:10;658:17;;586:96;:::o;93:592:3:-;;;;;;;",
  "deployedSourceMap": "93:592:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;643:63:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;480:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1700:145:5;;;:::i;:::-;;1068:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;830:174:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;562:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1604:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;427:170:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1267:331:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1994:240:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;356:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;643:63:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;480:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1700:145:5:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1068:85::-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;830:174:4:-;1291:12:5;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;938:27:4::1;;;;;;;;944:6;938:27;;;;952:12;938:27;;;;::::0;915:12:::1;:20;928:6;915:20;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:9;990:6;975:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:174:::0;;:::o;562:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1604:454::-;1691:6;1123:1;1078:47;;:12;:20;1091:6;1078:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1057:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1835:6:::1;1803:8;:20;1812:10;1803:20;;;;;;;;;;;;;;;:28;1824:6;1803:28;;;;;;;;;;;;:38;;1782:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;1931:40;1964:6;1931:8;:20;1940:10;1931:20;;;;;;;;;;;;;;;:28;1952:6;1931:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1900:8;:20;1909:10;1900:20;;;;;;;;;;;;;;;:28;1921:6;1900:28;;;;;;;;;;;:71;;;;1988:12;:20;2001:6;1988:20;;;;;;;;;;;:33;;;;;;;;;;;;1981:50;;;2032:10;2044:6;1981:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1604:454:::0;;;:::o;427:170:3:-;521:14;558:9;:17;568:6;558:17;;;;;;;;;;;:32;584:4;576:13;;;;;;;;;;;;;;;;558:32;;;;;;;;;;;551:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;427:170;;;;:::o;1267:331:4:-;1353:6;1123:1;1078:47;;:12;:20;1091:6;1078:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1057:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1406:40:::1;1439:6;1406:8;:20;1415:10;1406:20;;;;;;;;;;;;;;;:28;1427:6;1406:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1375:8;:20;1384:10;1375:20;;;;;;;;;;;;;;;:28;1396:6;1375:28;;;;;;;;;;;:71;;;;1463:12;:20;1476:6;1463:20;;;;;;;;;;;:33;;;;;;;;;;;;1456:54;;;1524:10;1556:4;1575:6;1456:135;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1267:331:::0;;;:::o;1994:240:5:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:8:-;639:7;665:10;658:17;;586:96;:::o;3039::9:-;3097:7;3127:1;3123;:5;;;;:::i;:::-;3116:12;;3039:96;;;;:::o;2672:::-;2730:7;2760:1;2756;:5;;;;:::i;:::-;2749:12;;2672:96;;;;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:155::-;;532:6;519:20;510:29;;548:41;583:5;548:41;:::i;:::-;500:95;;;;:::o;601:139::-;;685:6;672:20;663:29;;701:33;728:5;701:33;:::i;:::-;653:87;;;;:::o;746:262::-;;854:2;842:9;833:7;829:23;825:32;822:2;;;870:1;867;860:12;822:2;913:1;938:53;983:7;974:6;963:9;959:22;938:53;:::i;:::-;928:63;;884:117;812:196;;;;:::o;1014:407::-;;;1139:2;1127:9;1118:7;1114:23;1110:32;1107:2;;;1155:1;1152;1145:12;1107:2;1198:1;1223:53;1268:7;1259:6;1248:9;1244:22;1223:53;:::i;:::-;1213:63;;1169:117;1325:2;1351:53;1396:7;1387:6;1376:9;1372:22;1351:53;:::i;:::-;1341:63;;1296:118;1097:324;;;;;:::o;1427:278::-;;1543:2;1531:9;1522:7;1518:23;1514:32;1511:2;;;1559:1;1556;1549:12;1511:2;1602:1;1627:61;1680:7;1671:6;1660:9;1656:22;1627:61;:::i;:::-;1617:71;;1573:125;1501:204;;;;:::o;1711:262::-;;1819:2;1807:9;1798:7;1794:23;1790:32;1787:2;;;1835:1;1832;1825:12;1787:2;1878:1;1903:53;1948:7;1939:6;1928:9;1924:22;1903:53;:::i;:::-;1893:63;;1849:117;1777:196;;;;:::o;1979:407::-;;;2104:2;2092:9;2083:7;2079:23;2075:32;2072:2;;;2120:1;2117;2110:12;2072:2;2163:1;2188:53;2233:7;2224:6;2213:9;2209:22;2188:53;:::i;:::-;2178:63;;2134:117;2290:2;2316:53;2361:7;2352:6;2341:9;2337:22;2316:53;:::i;:::-;2306:63;;2261:118;2062:324;;;;;:::o;2392:423::-;;;2525:2;2513:9;2504:7;2500:23;2496:32;2493:2;;;2541:1;2538;2531:12;2493:2;2584:1;2609:53;2654:7;2645:6;2634:9;2630:22;2609:53;:::i;:::-;2599:63;;2555:117;2711:2;2737:61;2790:7;2781:6;2770:9;2766:22;2737:61;:::i;:::-;2727:71;;2682:126;2483:332;;;;;:::o;2821:552::-;;;;2963:2;2951:9;2942:7;2938:23;2934:32;2931:2;;;2979:1;2976;2969:12;2931:2;3022:1;3047:53;3092:7;3083:6;3072:9;3068:22;3047:53;:::i;:::-;3037:63;;2993:117;3149:2;3175:53;3220:7;3211:6;3200:9;3196:22;3175:53;:::i;:::-;3165:63;;3120:118;3277:2;3303:53;3348:7;3339:6;3328:9;3324:22;3303:53;:::i;:::-;3293:63;;3248:118;2921:452;;;;;:::o;3379:262::-;;3487:2;3475:9;3466:7;3462:23;3458:32;3455:2;;;3503:1;3500;3493:12;3455:2;3546:1;3571:53;3616:7;3607:6;3596:9;3592:22;3571:53;:::i;:::-;3561:63;;3517:117;3445:196;;;;:::o;3647:407::-;;;3772:2;3760:9;3751:7;3747:23;3743:32;3740:2;;;3788:1;3785;3778:12;3740:2;3831:1;3856:53;3901:7;3892:6;3881:9;3877:22;3856:53;:::i;:::-;3846:63;;3802:117;3958:2;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3929:118;3730:324;;;;;:::o;4060:267::-;;4194:90;4280:3;4272:6;4194:90;:::i;:::-;4316:4;4311:3;4307:14;4293:28;;4184:143;;;;:::o;4333:108::-;4410:24;4428:5;4410:24;:::i;:::-;4405:3;4398:37;4388:53;;:::o;4447:118::-;4534:24;4552:5;4534:24;:::i;:::-;4529:3;4522:37;4512:53;;:::o;4619:908::-;;4811:76;4881:5;4811:76;:::i;:::-;4903:108;5004:6;4999:3;4903:108;:::i;:::-;4896:115;;5035:78;5107:5;5035:78;:::i;:::-;5136:7;5167:1;5152:350;5177:6;5174:1;5171:13;5152:350;;;5253:6;5247:13;5280:107;5383:3;5368:13;5280:107;:::i;:::-;5273:114;;5410:82;5485:6;5410:82;:::i;:::-;5400:92;;5212:290;5199:1;5196;5192:9;5187:14;;5152:350;;;5156:14;5518:3;5511:10;;4787:740;;;;;;;:::o;5533:99::-;5604:21;5619:5;5604:21;:::i;:::-;5599:3;5592:34;5582:50;;:::o;5638:109::-;5719:21;5734:5;5719:21;:::i;:::-;5714:3;5707:34;5697:50;;:::o;5753:108::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5808:53;;:::o;5867:118::-;5954:24;5972:5;5954:24;:::i;:::-;5949:3;5942:37;5932:53;;:::o;5991:370::-;;6154:67;6218:2;6213:3;6154:67;:::i;:::-;6147:74;;6251:34;6247:1;6242:3;6238:11;6231:55;6317:8;6312:2;6307:3;6303:12;6296:30;6352:2;6347:3;6343:12;6336:19;;6137:224;;;:::o;6367:321::-;;6530:67;6594:2;6589:3;6530:67;:::i;:::-;6523:74;;6627:25;6623:1;6618:3;6614:11;6607:46;6679:2;6674:3;6670:12;6663:19;;6513:175;;;:::o;6694:318::-;;6857:67;6921:2;6916:3;6857:67;:::i;:::-;6850:74;;6954:22;6950:1;6945:3;6941:11;6934:43;7003:2;6998:3;6994:12;6987:19;;6840:172;;;:::o;7018:330::-;;7181:67;7245:2;7240:3;7181:67;:::i;:::-;7174:74;;7278:34;7274:1;7269:3;7265:11;7258:55;7339:2;7334:3;7330:12;7323:19;;7164:184;;;:::o;7398:1190::-;7529:4;7524:3;7520:14;7614:4;7607:5;7603:16;7597:23;7633:63;7690:4;7685:3;7681:14;7667:12;7633:63;:::i;:::-;7544:162;7790:4;7783:5;7779:16;7773:23;7809:63;7866:4;7861:3;7857:14;7843:12;7809:63;:::i;:::-;7716:166;7968:4;7961:5;7957:16;7951:23;7987:57;8038:4;8033:3;8029:14;8015:12;7987:57;:::i;:::-;7892:162;8138:4;8131:5;8127:16;8121:23;8157:63;8214:4;8209:3;8205:14;8191:12;8157:63;:::i;:::-;8064:166;8314:4;8307:5;8303:16;8297:23;8333:63;8390:4;8385:3;8381:14;8367:12;8333:63;:::i;:::-;8240:166;8489:4;8482:5;8478:16;8472:23;8508:63;8565:4;8560:3;8556:14;8542:12;8508:63;:::i;:::-;8416:165;7498:1090;;;:::o;8594:108::-;8671:24;8689:5;8671:24;:::i;:::-;8666:3;8659:37;8649:53;;:::o;8708:118::-;8795:24;8813:5;8795:24;:::i;:::-;8790:3;8783:37;8773:53;;:::o;8832:222::-;;8963:2;8952:9;8948:18;8940:26;;8976:71;9044:1;9033:9;9029:17;9020:6;8976:71;:::i;:::-;8930:124;;;;:::o;9060:442::-;;9247:2;9236:9;9232:18;9224:26;;9260:71;9328:1;9317:9;9313:17;9304:6;9260:71;:::i;:::-;9341:72;9409:2;9398:9;9394:18;9385:6;9341:72;:::i;:::-;9423;9491:2;9480:9;9476:18;9467:6;9423:72;:::i;:::-;9214:288;;;;;;:::o;9508:332::-;;9667:2;9656:9;9652:18;9644:26;;9680:71;9748:1;9737:9;9733:17;9724:6;9680:71;:::i;:::-;9761:72;9829:2;9818:9;9814:18;9805:6;9761:72;:::i;:::-;9634:206;;;;;:::o;9846:461::-;;10071:2;10060:9;10056:18;10048:26;;10120:9;10114:4;10110:20;10106:1;10095:9;10091:17;10084:47;10148:152;10295:4;10286:6;10148:152;:::i;:::-;10140:160;;10038:269;;;;:::o;10313:222::-;;10444:2;10433:9;10429:18;10421:26;;10457:71;10525:1;10514:9;10510:17;10501:6;10457:71;:::i;:::-;10411:124;;;;:::o;10541:332::-;;10700:2;10689:9;10685:18;10677:26;;10713:71;10781:1;10770:9;10766:17;10757:6;10713:71;:::i;:::-;10794:72;10862:2;10851:9;10847:18;10838:6;10794:72;:::i;:::-;10667:206;;;;;:::o;10879:419::-;;11083:2;11072:9;11068:18;11060:26;;11132:9;11126:4;11122:20;11118:1;11107:9;11103:17;11096:47;11160:131;11286:4;11160:131;:::i;:::-;11152:139;;11050:248;;;:::o;11304:419::-;;11508:2;11497:9;11493:18;11485:26;;11557:9;11551:4;11547:20;11543:1;11532:9;11528:17;11521:47;11585:131;11711:4;11585:131;:::i;:::-;11577:139;;11475:248;;;:::o;11729:419::-;;11933:2;11922:9;11918:18;11910:26;;11982:9;11976:4;11972:20;11968:1;11957:9;11953:17;11946:47;12010:131;12136:4;12010:131;:::i;:::-;12002:139;;11900:248;;;:::o;12154:419::-;;12358:2;12347:9;12343:18;12335:26;;12407:9;12401:4;12397:20;12393:1;12382:9;12378:17;12371:47;12435:131;12561:4;12435:131;:::i;:::-;12427:139;;12325:248;;;:::o;12579:222::-;;12710:2;12699:9;12695:18;12687:26;;12723:71;12791:1;12780:9;12776:17;12767:6;12723:71;:::i;:::-;12677:124;;;;:::o;12807:763::-;;13072:3;13061:9;13057:19;13049:27;;13086:71;13154:1;13143:9;13139:17;13130:6;13086:71;:::i;:::-;13167:72;13235:2;13224:9;13220:18;13211:6;13167:72;:::i;:::-;13249:66;13311:2;13300:9;13296:18;13287:6;13249:66;:::i;:::-;13325:72;13393:2;13382:9;13378:18;13369:6;13325:72;:::i;:::-;13407:73;13475:3;13464:9;13460:19;13451:6;13407:73;:::i;:::-;13490;13558:3;13547:9;13543:19;13534:6;13490:73;:::i;:::-;13039:531;;;;;;;;;:::o;13576:154::-;;13688:3;13680:11;;13718:4;13713:3;13709:14;13701:22;;13670:60;;;:::o;13736:136::-;;13859:5;13853:12;13843:22;;13832:40;;;:::o;13878:135::-;;14002:4;13997:3;13993:14;13985:22;;13975:38;;;:::o;14019:206::-;;14174:6;14169:3;14162:19;14214:4;14209:3;14205:14;14190:29;;14152:73;;;;:::o;14231:169::-;;14349:6;14344:3;14337:19;14389:4;14384:3;14380:14;14365:29;;14327:73;;;;:::o;14406:305::-;;14465:20;14483:1;14465:20;:::i;:::-;14460:25;;14499:20;14517:1;14499:20;:::i;:::-;14494:25;;14653:1;14585:66;14581:74;14578:1;14575:81;14572:2;;;14659:18;;:::i;:::-;14572:2;14703:1;14700;14696:9;14689:16;;14450:261;;;;:::o;14717:191::-;;14777:20;14795:1;14777:20;:::i;:::-;14772:25;;14811:20;14829:1;14811:20;:::i;:::-;14806:25;;14850:1;14847;14844:8;14841:2;;;14855:18;;:::i;:::-;14841:2;14900:1;14897;14893:9;14885:17;;14762:146;;;;:::o;14914:96::-;;14980:24;14998:5;14980:24;:::i;:::-;14969:35;;14959:51;;;:::o;15016:90::-;;15093:5;15086:13;15079:21;15068:32;;15058:48;;;:::o;15112:77::-;;15178:5;15167:16;;15157:32;;;:::o;15195:126::-;;15272:42;15265:5;15261:54;15250:65;;15240:81;;;:::o;15327:77::-;;15393:5;15382:16;;15372:32;;;:::o;15410:180::-;15458:77;15455:1;15448:88;15555:4;15552:1;15545:15;15579:4;15576:1;15569:15;15596:122;15669:24;15687:5;15669:24;:::i;:::-;15662:5;15659:35;15649:2;;15708:1;15705;15698:12;15649:2;15639:79;:::o;15724:116::-;15794:21;15809:5;15794:21;:::i;:::-;15787:5;15784:32;15774:2;;15830:1;15827;15820:12;15774:2;15764:76;:::o;15846:122::-;15919:24;15937:5;15919:24;:::i;:::-;15912:5;15909:35;15899:2;;15958:1;15955;15948:12;15899:2;15889:79;:::o;15974:107::-;16055:1;16048:5;16045:12;16035:2;;16071:1;16068;16061:12;16035:2;16025:56;:::o;16087:122::-;16160:24;16178:5;16160:24;:::i;:::-;16153:5;16150:35;16140:2;;16199:1;16196;16189:12;16140:2;16130:79;:::o",
  "source": "pragma solidity >=0.4.22 <=0.8.3;\npragma experimental ABIEncoderV2;\n\nimport \"./wallet.sol\";\n\ncontract Dex is Wallet {\n    enum Side {BUY, SELL}\n\n    struct Order {\n        uint256 id;\n        address trader;\n        // bool buyOrder; // true or false\n        bool buyOrder;\n        bytes32 ticker;\n        uint256 amount;\n        uint256 price;\n    }\n\n    mapping(bytes32 => mapping(uint256 => Order[])) public orderBook;\n\n    function getOrderBook(bytes32 ticker, Side side)\n        public\n        view\n        returns (Order[] memory)\n    {\n        return orderBook[ticker][uint256(side)];\n    }\n\n    // getOrderBook(byte32(\"LINK\"), Side.BUY);\n    // function createLimitOrder() {}\n}\n",
  "sourcePath": "/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/dex.sol",
  "ast": {
    "absolutePath": "/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/dex.sol",
    "exportedSymbols": {
      "Context": [
        1157
      ],
      "Dex": [
        275
      ],
      "IERC20": [
        1134
      ],
      "Ownable": [
        555
      ],
      "SafeMath": [
        1469
      ],
      "Wallet": [
        445
      ]
    },
    "id": 276,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 224,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<=",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:3"
      },
      {
        "id": 225,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "absolutePath": "/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/wallet.sol",
        "file": "./wallet.sol",
        "id": 226,
        "nodeType": "ImportDirective",
        "scope": 276,
        "sourceUnit": 446,
        "src": "69:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 227,
              "name": "Wallet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 445,
              "src": "109:6:3"
            },
            "id": 228,
            "nodeType": "InheritanceSpecifier",
            "src": "109:6:3"
          }
        ],
        "contractDependencies": [
          445,
          555,
          1157
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 275,
        "linearizedBaseContracts": [
          275,
          445,
          555,
          1157
        ],
        "name": "Dex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Dex.Side",
            "id": 231,
            "members": [
              {
                "id": 229,
                "name": "BUY",
                "nodeType": "EnumValue",
                "src": "133:3:3"
              },
              {
                "id": 230,
                "name": "SELL",
                "nodeType": "EnumValue",
                "src": "138:4:3"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "122:21:3"
          },
          {
            "canonicalName": "Dex.Order",
            "id": 244,
            "members": [
              {
                "constant": false,
                "id": 233,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "172:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 232,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 235,
                "mutability": "mutable",
                "name": "trader",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "192:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 234,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "192:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 237,
                "mutability": "mutable",
                "name": "buyOrder",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "259:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 236,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "259:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 239,
                "mutability": "mutable",
                "name": "ticker",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "282:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 238,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "282:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 241,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "306:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 240,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "306:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 243,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "330:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 242,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "330:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 275,
            "src": "149:201:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bb431b6",
            "id": 252,
            "mutability": "mutable",
            "name": "orderBook",
            "nodeType": "VariableDeclaration",
            "scope": 275,
            "src": "356:64:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
            },
            "typeName": {
              "id": 251,
              "keyType": {
                "id": 245,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "364:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "356:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
              },
              "valueType": {
                "id": 250,
                "keyType": {
                  "id": 246,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "383:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "375:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Dex.Order[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 247,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 244,
                      "src": "394:5:3"
                    },
                    "referencedDeclaration": 244,
                    "src": "394:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$244_storage_ptr",
                      "typeString": "struct Dex.Order"
                    }
                  },
                  "id": 249,
                  "nodeType": "ArrayTypeName",
                  "src": "394:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$244_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.Order[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "541:56:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 264,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "558:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 266,
                      "indexExpression": {
                        "id": 265,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "568:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "558:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 271,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 269,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "584:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$231",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$231",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "576:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "576:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "576:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "558:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$244_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "551:39:3"
                }
              ]
            },
            "functionSelector": "ba58ea68",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "449:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "465:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$231",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 255,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 231,
                      "src": "465:4:3"
                    },
                    "referencedDeclaration": 231,
                    "src": "465:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$231",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:27:3"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "521:14:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$244_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 260,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 259,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 244,
                        "src": "521:5:3"
                      },
                      "referencedDeclaration": 244,
                      "src": "521:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$244_storage_ptr",
                        "typeString": "struct Dex.Order"
                      }
                    },
                    "id": 261,
                    "nodeType": "ArrayTypeName",
                    "src": "521:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$244_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "520:16:3"
            },
            "scope": 275,
            "src": "427:170:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 276,
        "src": "93:592:3"
      }
    ],
    "src": "0:686:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/dex.sol",
    "exportedSymbols": {
      "Context": [
        1157
      ],
      "Dex": [
        275
      ],
      "IERC20": [
        1134
      ],
      "Ownable": [
        555
      ],
      "SafeMath": [
        1469
      ],
      "Wallet": [
        445
      ]
    },
    "id": 276,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 224,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<=",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:3"
      },
      {
        "id": 225,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "absolutePath": "/Users/zengzhenwu/Desktop/projects/IvanontechLessons/dex/contracts/wallet.sol",
        "file": "./wallet.sol",
        "id": 226,
        "nodeType": "ImportDirective",
        "scope": 276,
        "sourceUnit": 446,
        "src": "69:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 227,
              "name": "Wallet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 445,
              "src": "109:6:3"
            },
            "id": 228,
            "nodeType": "InheritanceSpecifier",
            "src": "109:6:3"
          }
        ],
        "contractDependencies": [
          445,
          555,
          1157
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 275,
        "linearizedBaseContracts": [
          275,
          445,
          555,
          1157
        ],
        "name": "Dex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Dex.Side",
            "id": 231,
            "members": [
              {
                "id": 229,
                "name": "BUY",
                "nodeType": "EnumValue",
                "src": "133:3:3"
              },
              {
                "id": 230,
                "name": "SELL",
                "nodeType": "EnumValue",
                "src": "138:4:3"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "122:21:3"
          },
          {
            "canonicalName": "Dex.Order",
            "id": 244,
            "members": [
              {
                "constant": false,
                "id": 233,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "172:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 232,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 235,
                "mutability": "mutable",
                "name": "trader",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "192:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 234,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "192:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 237,
                "mutability": "mutable",
                "name": "buyOrder",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "259:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 236,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "259:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 239,
                "mutability": "mutable",
                "name": "ticker",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "282:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 238,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "282:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 241,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "306:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 240,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "306:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 243,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 244,
                "src": "330:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 242,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "330:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 275,
            "src": "149:201:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bb431b6",
            "id": 252,
            "mutability": "mutable",
            "name": "orderBook",
            "nodeType": "VariableDeclaration",
            "scope": 275,
            "src": "356:64:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
            },
            "typeName": {
              "id": 251,
              "keyType": {
                "id": 245,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "364:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "356:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
              },
              "valueType": {
                "id": 250,
                "keyType": {
                  "id": 246,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "383:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "375:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Dex.Order[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 247,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 244,
                      "src": "394:5:3"
                    },
                    "referencedDeclaration": 244,
                    "src": "394:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$244_storage_ptr",
                      "typeString": "struct Dex.Order"
                    }
                  },
                  "id": 249,
                  "nodeType": "ArrayTypeName",
                  "src": "394:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$244_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.Order[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "541:56:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 264,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "558:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 266,
                      "indexExpression": {
                        "id": 265,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "568:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "558:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$244_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 271,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 269,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "584:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$231",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$231",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "576:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "576:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "576:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "558:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$244_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "551:39:3"
                }
              ]
            },
            "functionSelector": "ba58ea68",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "449:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "465:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$231",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 255,
                      "name": "Side",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 231,
                      "src": "465:4:3"
                    },
                    "referencedDeclaration": 231,
                    "src": "465:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$231",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:27:3"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "521:14:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$244_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 260,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 259,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 244,
                        "src": "521:5:3"
                      },
                      "referencedDeclaration": 244,
                      "src": "521:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$244_storage_ptr",
                        "typeString": "struct Dex.Order"
                      }
                    },
                    "id": 261,
                    "nodeType": "ArrayTypeName",
                    "src": "521:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$244_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "520:16:3"
            },
            "scope": 275,
            "src": "427:170:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 276,
        "src": "93:592:3"
      }
    ],
    "src": "0:686:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE1C3b4E87d6a7d8fAD0170f06F42aDE1d4206177",
      "transactionHash": "0x3c12b37829ada52de920f4950b3f71cd444e4d4ed56d9d1daded6971bdb08906"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-04-29T08:08:31.746Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}